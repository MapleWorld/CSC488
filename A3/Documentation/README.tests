Passing Test Cases:

A1a.488 - From assignment 1, a program that uses all arithmetic, logical, and comparison operators.
A1b.488 - From assignment 1, a program using arrays including all forms of array declaration, positive and negative bounds.
A1c.488 - From assignment 1, a program using all forms of loop building and loop exit constructs.
A1d.488 - From assignment 1, a program using non-recursive functions and procedures with and without parameters.
A1e.488 - From assignment 1, a program using recursive functions and procedures with and without parameters.

nested_routine_decl.488 - nested procedure and function 
nested_scopes.488 - nested scopes
variable_scope.488 - Identifier re-declaration in nested scope
program_0.488 - Basic empty scope test
program_1.488 - Single statment
program_2.488 - Single variable declaration
program_3.488 - Multiple variables declaration
program_4.488 - Variable re-assignment
program_6.488 - Single procedure with params
program_8.488 - Various valid if-statements
program_9.488 - Various valid if-statements with no indent
program_10.488 - Various array declaration with bound
program_11.488 - Write statment with multiple newlines
program_12.488 - Single variable read statement
program_13.488 - Mutiple variables read statement
program_14.488 - Recursive function with mutiple read and write.
program_15.488 - Various valid loops
sem_statement_exit.488 - exit statement
sem_statement_exitinteger.488 - exit on integer
sem_statement_exitwhen.488 - exit on condition
sem_statement_exitintegerwhen.488 - exit on integer on condition
sem_statement_return.488 - Procedure with no param but return empty
sem_statement_returnwith.488 - Function with return type integer
sem_statement_variable.488 - Basic variable declaration

Failing Test Cases:

sem_statement_exit.488 - Exit statement (invalid scope type)
sem_statement_exitinteger.488 - Incorrect exit statement on integer
sem_statement_exitwhen.488 - Incorrect loop exit with condition
sem_statement_ifthen.488 - Incorrect If write statement with integer condition
sem_statement_ifthenelse.488 - Incorrect If else write statement on integer condition
sem_statement_procedurename.488 - Incorrect number of param for procedure
sem_statement_procedurenameargs.488 - Incorrect number of param for procedure
sem_statement_repeatuntil.488 - Incorrect condition on repeat statement
sem_statement_return.488 - Incorrect empty return statement
sem_statement_returnwith.488 - Incorrect function return type
sem_statement_variable.488 - Incorrect variable type assignment
sem_statement_whiledo.488 - Incorrect while loop condition statement
array_S31.488 - Incorrect usage on array subscription, validate its type and existence
program_5.488 - Function misuage
binary_S31.488 - Incorrect usage on binary expressions (arithmetic and boolean), validate the result type
read.488 - Incorrect read statement, validate inputs type
binary_S32.488 - Incorrect usage on binary expressions (equality) , validate the result type
scalar_S20.488 - Incorrect usage on boolean type scalar value, validate its type
bracket_expn_S23.488 - Incorrect usage on (expression), validate the type 
scalar_S21.488 - Incorrect usage on integer type scalar value, validate its type
cond_expn_S33.488 - Incorrect usage on conditional expressions, validate its type 
scalar_decl.488 - Redeclaration in the same scope
function_S43.488 - Function call misuage, validate its paramaters and type                  
sem_statement_returnwith_2.488 - Return with misusage, validate the scope it is in
function_decl.488 - Function re-declaration and parameter re-declaration
not_S30.488 - Not expressions misusage
param_S25.488 - Parameter redeclaration       
sem_statement_exitintegerwhen.488 - Exit on integer with condition (incorrect integer value)
unary_minus_S31.488 - Incorrect unary minus expression, validate its usage and type
procedure_decl.488 - Procedure redeclaration       
write.488 - Incorrect write statement, validate outputs type
procedurestmt.488 - Incorrect procedure call, validate the type and parameters  
sem_statement_exitwhen_2.488 - Invalid scope to call exit on condition
