Useful notes from the textbook:
--------------------------------

pg 335 - 
"In the design of the visit methods, two goals were paramount. The first was that the operation of each method must be based on only the AST node with which it is associated and information supplied by processing the sub- trees it references, while avoiding any dependency on the structure of any surrounding parts of the AST. The second principle was that checking must produce clear error messages so that a programmer can easily identify the program error that produced any particular message. The notion of using an errorType to deal with type errors was presented. Use of this technique in a consistent way throughout the visit methods is an effective way to minimize the number of error messages generated by the compiler, thus highlighting problems more precisely for the programmer."

sections 8.5.3 and onward with detailed pseudocode for visiting the AST

chapter 9.1 details semantic analysis visitors -

Using the visitor approach we developed in Chapters 7 and 8, we can factor all our semantic analysis into a number of specialized visitors, each implementing a portion of the overall semantic analysis task. In this chapter we shall focus on three aspects of semantic analysis: type correctness, reachability and termination, and exceptions.

Each AST node that contains an expression or statement will have a throwsSet field. This field will reference a set of exception types. The throwsSet will be propagated as ASTs are analyzed. It will be used when catch blocks, methods, and constructors are analyzed.

SemanticsVisitor is used to check that the type rules imposed on language constructs are satisfied. This includes checking that control expressions are Boolean-valued, that parameters have correct types in calls, that expected types are returned from calls, and so forth. This analysis, often called static semantics, is a necessary part of all compilers.

ReachabilityVisitor is a specialized visitor used to analyze control structures for reachability and proper termination. These visitors set two flags, isReachable and terminatesNormally, used for error analysis and optional code optimization.

ThrowsVisitor is a specialized visitor used to collect information about throws that may ”escape” from a given construct. These visitors compute the throwsSet field, which records exceptions that may be thrown.


Now checking the feasibility of using a particular method definition in a call is straightforward (we check that the number of parameters is correct and that each parameter is bindable).
